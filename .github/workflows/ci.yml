name: CI

on:
  pull_request:
    branches:
      - '*'
    types: opened
  push:
    branches-ignore:
      - '*'

jobs:
  spec:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.1
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Test with RSpec
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          DATABASE_PASSWORD: postgres # tried to pull it from the vars before but no dice
          RAILS_ENV: test
          # DATABASE_URL: "postgres://postgres:postgres@localhost:5432/pms_be_test"
          RUBYOPT: "-W:no-deprecated -W:no-experimental" # Suppress Rails 6 deprecation warnings for ruby 2.7
          OPENAI_ACCESS_TOKEN: ${{ vars.OPENAI_ACCESS_TOKEN }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET }}
          REDIS_URL: "redis://localhost:6379/1"
        run: |
          bundle exec rails db:setup # also runs seeds
          bundle exec rails zeitwerk:check # check eager loading separately
          bundle exec rspec --format documentation

#       - name: Upload test coverage to Codecov
#         uses: codecov/codecov-action@v2
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}

